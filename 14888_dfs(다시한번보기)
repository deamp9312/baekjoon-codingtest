package main.main2;


import java.util.*;


public class Main {
    public static StringBuffer sb = new StringBuffer();

    public static boolean[] booleans;
    public static int n, max,min;
    public static int[] nums, operators;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        min = Integer.MAX_VALUE;
        max = Integer.MIN_VALUE;

        n = sc.nextInt();
        nums = new int[n+1];
        operators = new int[5];

        for (int i = 1; i <= n; i++) {
            nums[i] = sc.nextInt();
        }
        for (int i = 1; i < operators.length; i++) {
            operators[i] = sc.nextInt();
        }


        rec_func(1, nums[1]);
        sb.append(max).append('\n').append(min);
        System.out.println(sb.toString());

    }

    static int calculator(int operand1, int operator, int operand2){
        // value, order[i], num[i+1]
        if (operator == 1) // +
            return operand1 + operand2;
        else if (operator == 2) // -
            return operand1 - operand2;
        else if (operator == 3) // *
            return operand1 * operand2;
        else // /
            return operand1 / operand2;
    }

    static void rec_func(int k, int value) {
        if (k == n) {
            // 완성된 식에 맞게 계산을 해서 정답에 갱신하는 작업
            max = Math.max(max, value);
            min = Math.min(min, value);
        } else {
            // k 번째 연산자는 무엇을 선택할 것인가?
            for (int cand = 1; cand <= 4; cand++){
                if (operators[cand] >= 1){
                    operators[cand]--;
                    rec_func(k + 1, calculator(value, cand, nums[k + 1]));
                    operators[cand]++;
                }
            }
        }
    }

}

